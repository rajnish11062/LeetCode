class Solution {
public:
    string addBinary(string a, string b) {
       
        int i=a.size()-1,j=b.size()-1;
        string result="";
        string ch;
        int carry=0;
        while(i>=0 && j>=0){
            if(a[i] == '1' && b[j]=='1')
            {
                if(carry)
                    ch="1";
                else
                    ch="0"; 
                
                carry = 1;
            }
            else if(a[i] == '0' && b[j]=='0')
            {
                if(carry)
                {
                    ch = "1";
                    carry=0;
                }
                else
                    ch = "0";
            }
            else 
            {
                if(carry)
                {
                   ch="0"; 
                }
                else
                    ch="1";
            }
            result.insert(0,ch);  
            j--;
            i--;
        }
      
        while(i>=0)
        {
            if(carry){
                if(a[i]=='1')
                {
                    ch="0";
                }
                else{
                    ch="1";
                    carry=0;
                }
            }
            else
                ch=a[i];
            result.insert(0,ch);
          i--;  
        }
        
        while(j>=0)
        {
            if(carry){
                if(b[j]=='1')
                {
                    ch="0";
                }
                else{
                    ch="1";
                    carry=0;
                }
            }
            else
                ch=b[j];
             result.insert(0,ch);
          j--;  
        }
        
        if(carry)
             result.insert(0,"1");
        
        return result;
        
    }
};

//Clean Code
class Solution {
public:
    string addBinary(string a, string b) 
    {  
        int i=a.size()-1;
        int j = b.size()-1;
        int sum,carry=0;
        string result;
        while(i>=0 || j >=0 ){
            sum=carry;
            if(i >=0)
                sum += a[i--]-'0';
            if(j>=0)
                sum += b[j--]-'0';
            
            carry= sum>1 ? 1:0;
            result += to_string(sum%2);
        }
        if(carry)
           result += to_string(carry);
        reverse(result.begin(),result.end());
    
        return result;
    }
};




















