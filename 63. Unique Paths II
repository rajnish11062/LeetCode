class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int m = obstacleGrid.size();
        int n = obstacleGrid[0].size();
        vector<vector<int>> dp(m,vector<int>(n,0));
        //fill first column 
        for(int i=0;i<m;i++){
            if(obstacleGrid[i][0])
                break;
            dp[i][0]=1;
        }
        //fill first row
        for(int j=0;j<n;j++){
            if(obstacleGrid[0][j])
                break;
            dp[0][j]=1;
        }
        //fill others using up and left grid
        for(int i=1;i<m;i++){
            for(int j=1;j<n;j++){
                if(obstacleGrid[i][j])
                     dp[i][j]=0;
                else{
                    dp[i][j] = dp[i][j-1] + dp[i-1][j];
                }
            }
        }
        return dp[m-1][n-1];
    }
};


