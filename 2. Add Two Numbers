/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *result=nullptr;
        ListNode *curr=nullptr;
        int sum,carry=0;
        while(l1 || l2){
            sum=carry;
            if(l1){
                sum += l1->val;
                l1=l1->next;
                
            }
            if(l2){
                sum += l2->val;
                l2=l2->next;  
            }
            
            carry = sum > 9 ? 1 :0;
            if(curr==nullptr)
            {
                curr= new ListNode(sum%10);
                result=curr;
            }
            else
            {
               curr->next = new ListNode(sum%10);
               curr=curr->next;
            }
        } 
        
        if(carry)
            curr->next = new ListNode(carry);
        
        return result;
    }
};


