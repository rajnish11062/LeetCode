class Solution {
public:
    string removeDuplicates(string s, int k) {
        
        int n = s.length();
        stack<pair<char,int>> st;
        string ans="";
        for(int i=0;i<n;i++){
            
            //decide here when to insert and when to pop from the stack, if found different element from peek of stack, simply insert and if it is same just increase the freq. if freq becomes equal to k pop that elemnt from stack
            
            if(st.empty() || st.top().first != s[i])
                st.push({s[i],1});
            else 
            {
                auto p = st.top();
                st.pop();
                st.push({p.first,++(p.second)});
            }
            
            if(st.top().second == k)
                st.pop();
        }
    
        //now stack will have the elements whose count are less than k
        while(!st.empty()){
            while((st.top().second)--){
                ans += st.top().first;
            }
            st.pop();  
        } 
        reverse(ans.begin(), ans.end());
        
        return ans;
        
    }
};
