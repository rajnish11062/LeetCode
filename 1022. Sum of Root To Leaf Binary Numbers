/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int convertNum(string str){
        int i=str.size()-1,c=0,s=0;
        while(i >=0){
            s += (str[i--]-'0')*(1<<c++);
        }
        return s;
    }
    void findSum(TreeNode *root,string str,int &sum){
        if(!root)
            return;
        str += to_string(root->val);
        if(root->left == nullptr && root->right == nullptr)
        {
            sum += convertNum(str);
        }
        findSum(root->left,str,sum);
        findSum(root->right,str,sum);
    }
    int sumRootToLeaf(TreeNode* root) {
        if(!root)
            return 0;
        string str;
        int sum=0;
        findSum(root,str,sum);
        return sum;
    }
};
