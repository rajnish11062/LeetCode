/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int findMaxDiff(TreeNode* root,int maxVal,int minVal)
    {
        if(root==NULL)
            return maxVal-minVal;
        int lefDiff=findMaxDiff(root->left,max(maxVal,root->val),min(root->val,minVal));
        int rightDiff = findMaxDiff(root->right,max(maxVal,root->val),min(root->val,minVal));
        return max(lefDiff,rightDiff);
    }
    int maxAncestorDiff(TreeNode* root) {
     if(root==nullptr)
         return -1;
      int max=0,min=100000;
      return findMaxDiff(root,max,min);
    }
};
